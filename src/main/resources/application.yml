server:
  port: ${SERVER_PORT:8080}
eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICE_DEFAULTZONE:http://localhost:8761/eureka/}
    register-with-eureka: true
    fetch-registry: true
  instance:
    hostname: ${EUREKA_INSTANCE_HOSTNAME:localhost}
    prefer-ip-address: false
    instanceId: ${EUREKA_INSTANCE_ID:${spring.application.name}:${random.value}}
spring:
  application:
    name: chat-service
  datasource:
    driver-class-name: org.postgresql.Driver
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    url: jdbc:postgresql://${DB_URL:localhost:5432}/${DB_NAME:vinaacademy_chat}
    hikari:
      auto-commit: true
      minimum-idle: 5
      maximum-pool-size: 20
  jpa:
    properties:
      hibernate:
        format_sql: true
        order_updates: true
        use_sql_comments: true
        order_inserts: true
        show_sql: true
    generate-ddl: true
    hibernate:
      ddl-auto: validate
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    url: ${spring.datasource.url}
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
  
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP_ID:chat-service-group}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: vn.vinaacademy.chat.dto
        spring.json.value.default.type: vn.vinaacademy.chat.dto.MessageDto
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
springdoc:
  swagger-ui:
    path: /
    operations-sorter: method
logging:
  level:
    root: INFO
    vn:
      vinaacademy: TRACE
      vinaacademy.security: TRACE
      vinaacademy.chat: TRACE
    org:
      hibernate:
        type:
          descriptor:
            sql:
              BasicBinder: TRACE
          nodeValue: TRACE
        SQL: DEBUG


management:
  endpoints:
    web:
      base-path: /actuator
  server:
    port: ${SERVER_PORT:8080}

app:
  ws:
    allowed-origins: ${WS_ALLOWED_ORIGINS:*}

security:
  eureka:
    enabled: ${SECURITY_EUREKA_ENABLED:true}
  oauth2:
    provider:
      token-uri: ${SECURITY_OAUTH2_TOKEN_URI:http://localhost:8080/oauth2/token}
      service-name: ${SECURITY_EUREKA_SERVICE_NAME:vinaacademy-platform}
    grpc-client:
      scopes: ${SECURITY_OAUTH2_SCOPE_1:api.read}, ${SECURITY_OAUTH2_SCOPE_2:api.write}
      client-id: ${SECURITY_OAUTH2_GRPC_CLIENT_ID:grpc-client}
      client-secret: ${SECURITY_OAUTH2_GRPC_CLIENT_SECRET:grpc-secret}
  grpc:
    grpc-address: ${SECURITY_JWT_GRPC_ADDRESS:localhost:9090}
    enable-keep-alive: ${SECURITY_JWT_ENABLE_KEEP_ALIVE:true}
    keep-alive-time: ${SECURITY_JWT_KEEP_ALIVE_TIME:30}
    keep-alive-timeout: ${SECURITY_JWT_KEEP_ALIVE_TIMEOUT:5}
    service-name: vinaacademy-platform
    grpc-port: 9090